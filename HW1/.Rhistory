Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
My_names = deput(names(Diabete_data))
library(caret)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
My_names = dput(names(Diabete_data))
setwd("~/my_repo/CS_498_AML/HW1")
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
My_names = dput(names(Diabete_data))
View(Diabete_data)
iabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
variables = dput(names(Diabete_data))
numbers = Diabete_data[2:767, 1:9]
View(numbers)
View(numbers)
View(numbers)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
variables = dput(names(Diabete_data))
numbers = Diabete_data[1:767, 1:9]
View(numbers)
rm(list = ls())
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
variables = dput(names(Diabete_data))
numbers = Diabete_data[1:767, 1:9]
svm_result = svmlight(numbers, variables, pathsvm = path)
library(klaR)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
variables = dput(names(Diabete_data))
numbers = Diabete_data[1:767, 1:9]
svm_result = svmlight(numbers, variables, pathsvm = path)
View(svm_result)
View(svm_result)
library(klaR)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
variables = dput(names(Diabete_data))
numbers = Diabete_data[1:767, 1:9]
svm_result <- svmlight(numbers, variables, pathsvm = path)
View(svm_result)
rm(list = ls())
library(klaR)
library(caret)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
variables = dput(names(Diabete_data))
train_data = Diabete_data[train_Index]
test_data = Diabete_data[-train_Index]
print(test_data)
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
variables = dput(names(Diabete_data))
train_data <- Diabete_data[train_Index]
test_data <- Diabete_data[-train_Index]
print(Diabete_data[1])
indices <- c(1,2,3,4,5)
print(Diabete_data[indices])
print(Diabete_data[indices,])
print(Diabete_data[indices,1:8])
test_data <- Diabete_data[-train_Index, ]
test_data <- Diabete_data[-train_Index, 1:8]
trainY <- Diabete_data$X1[train_Index, 9]
trainY <- Diabete_data$X1[train_Index]
View(test_data)
rm(list = ls())
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, ]
library(klaR)
library(caret)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, ]
View(train_Index)
svm_result <- svmlight(train_feature, train_label, pathsvm = path)
prediction <- predict(svm_result, test_data)
View(prediction)
print(prediction)
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, 1:8]
svm_result <- svmlight(train_feature, train_label, pathsvm = path)
prediction <- predict(svm_result, test_data)
print(prediction)
results = integer(length(prediction))
results = integer(length(prediction[[1]]))
for (i in 1:length(results)) {
if (prediction[i,1] >= prediction[i,2]) {
results == 0
} else {
results == 1
}
}
print(prediction[["posterior"]])
for (i in 1:length(results)) {
if (prediction[["posterior"]][1] >= prediction[["posterior"]][2]) {
results[i] <- 0
} else {
results[i] <- 1
}
}
print(-train_Index)
print(length(-train_Index))
print(length(Diabete_data$X1[-train_Index])
print(length(Diabete_data$X1))
print(prediction[["class"]])
print(prediction[["class"]][1])
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, 1:8]
test_Y <- Diabete_data$X1[-train_Index]
svm_result <- svmlight(train_feature, train_label, pathsvm = path)
prediction <- predict(svm_result, test_data)
valid_num <- 0
for (i in 1:length(test_Y)) {
if (prediction[["class"]][i] == test_Y[i]) {
valid_num <- valid_num + 1
}
}
print(valid_num)
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, 1:8]
test_Y <- Diabete_data$X1[-train_Index]
svm_result <- svmlight(train_feature, train_label, pathsvm = path)
prediction <- predict(svm_result, test_data)
valid_num <- 0
for (i in 1:length(test_Y)) {
if (prediction[["class"]][i] == test_Y[i]) {
valid_num <- valid_num + 1
}
}
accuracy = valid_num / length(test_Y)
print(accuracy)
rm(list = ls(0))
rm(list = ls())
Part 1D
library(klaR)
library(caret)
Diabete_data <- read.csv(file = "pima-indians-diabetes.csv", header = TRUE, sep = ",")
path = '~/svm_light/'
accuracy = double(10)
itr = 1
while (itr < 11) {
train_Index <- createDataPartition(Diabete_data$X1, p = 0.2, list = FALSE, times = 1)
train_feature <- Diabete_data[train_Index, 1:8]
train_label <- Diabete_data$X1[train_Index]
test_data <- Diabete_data[-train_Index, 1:8]
test_Y <- Diabete_data$X1[-train_Index]
svm_result <- svmlight(train_feature, train_label, pathsvm = path)
prediction <- predict(svm_result, test_data)
valid_num <- 0
for (i in 1:length(test_Y)) {
if (prediction[["class"]][i] == test_Y[i]) {
valid_num <- valid_num + 1
}
}
accuracy[itr] = valid_num / length(test_Y)
itr <- itr + 1
}
print(accuracy)
